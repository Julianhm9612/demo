<?xml version="1.0" ?>
<container xmlns="http://symfony.com/schema/dic/services"
           xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
           xsi:schemaLocation="http://symfony.com/schema/dic/services http://symfony.com/schema/dic/services/services-1.0.xsd">

    <services>

        <!-- Doctrine2 connection instance -->
        <service id="app.event_sourcing.storage.connection" class="Doctrine\DBAL\Connection" public="false">
            <factory class="Desperado\EventSourcing\Storage\Doctrine\DoctrineConnectionFactory" method="create"/>
            <argument>%database_connection_dsn%</argument>
            <argument type="constant">true</argument>
            <argument type="service" id="service_bus.logger"/>
        </service>

        <!-- Indexes storage -->
        <service id="app.event_sourcing.storage.index_storage"
                 class="Desperado\EventSourcing\Storage\Doctrine\DoctrineIndexStorage"
                 public="false">
            <argument type="service" id="app.event_sourcing.storage.connection"/>
        </service>

        <!-- Snapshot storage -->
        <service id="app.event_sourcing.storage.snapshot_storage"
                 class="Desperado\EventSourcing\Storage\Doctrine\DoctrineSnapshotStorage"
                 public="false">
            <argument type="service" id="app.event_sourcing.storage.connection"/>
        </service>

        <!-- Event sourcing storage -->
        <service id="app.event_sourcing.storage.event_sourcing_storage"
                 class="Desperado\EventSourcing\Storage\Doctrine\DoctrineEventStorage"
                 public="false">
            <argument type="service" id="app.event_sourcing.storage.connection"/>
        </service>


        <!--Indexer -->
        <service id="app.event_sourcing.indexer" class="Desperado\EventSourcing\Indexes\Indexer" public="true">
            <argument type="service" id="app.event_sourcing.storage.index_storage"/>
        </service>

        <!-- Snapshot store -->
        <service id="app.event_sourcing.snapshot.snapshot_store"
                 class="Desperado\EventSourcing\Snapshots\SnapshotStore"
                 public="false">
            <argument type="service" id="app.event_sourcing.storage.snapshot_storage"/>
        </service>

        <!-- Aggregate serializer -->
        <service id="app.event_sourcing.snapshot.aggregate_serializer"
                 class="Desperado\EventSourcing\Snapshots\Serializer\AggregateSnapshotSerializer"
                 public="false"/>

        <!-- Snapshots trigger -->
        <service id="app.event_sourcing.snapshot.version_trigger"
                 class="Desperado\EventSourcing\Snapshots\Trigger\VersionTrigger"
                 public="false">
            <argument>2</argument>
        </service>

        <!-- Snapshotter -->
        <service id="app.event_sourcing.snapshot.snapshotter"
                 class="Desperado\EventSourcing\Snapshots\Snapshotter"
                 public="false">
            <argument type="service" id="app.event_sourcing.snapshot.snapshot_store"/>
            <argument type="service" id="app.event_sourcing.snapshot.aggregate_serializer"/>
            <argument type="service" id="app.event_sourcing.snapshot.version_trigger"/>
            <argument type="service" id="service_bus.logger"/>

            <tag name="service_bus.logger" channel="snapshotter"/>

        </service>

        <!-- Event store -->
        <service id="app.event_sourcing.event_store"
                 class="Desperado\EventSourcing\EventStreams\EventStore"
                 public="false">
            <argument type="service" id="app.event_sourcing.storage.event_sourcing_storage"/>
            <argument type="service" id="service_bus.serializer.messages"/>
        </service>

        <!-- Event sourcing manager -->
        <service id="app.event_sourcing.aggregate_manager"
                 class="Desperado\EventSourcing\Aggregates\AggregateManager"
                 public="true">
            <argument type="service" id="app.event_sourcing.event_store"/>
            <argument type="service" id="app.event_sourcing.snapshot.snapshotter"/>
        </service>
    </services>
</container>
